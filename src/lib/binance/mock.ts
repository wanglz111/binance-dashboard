import { env } from "@/lib/env";
import type { BinanceServiceContract } from "@/lib/binance/service";
import {
  buildPositions,
  buildSummary,
  buildTrades,
} from "@/lib/binance/service";
import type {
  DashboardPayload,
  FuturesAccount,
  IncomeRecord,
  Trade,
} from "@/lib/binance/types";

const now = Date.now();

const mockAccount: FuturesAccount = {
  feeTier: 2,
  canTrade: true,
  canDeposit: true,
  canWithdraw: true,
  updateTime: now,
  totalInitialMargin: "45.20",
  totalMaintMargin: "18.50",
  totalWalletBalance: "181.20",
  totalUnrealizedProfit: "11.54",
  totalMarginBalance: "192.74",
  totalPositionInitialMargin: "32.10",
  totalOpenOrderInitialMargin: "3.25",
  totalCrossWalletBalance: "175.66",
  totalCrossUnPnl: "9.43",
  availableBalance: "142.30",
  maxWithdrawAmount: "138.90",
  assets: [
    {
      asset: "USDT",
      walletBalance: "181.20",
      unrealizedProfit: "11.54",
      marginBalance: "192.74",
      maintMargin: "18.50",
      crossWalletBalance: "175.66",
      crossUnPnl: "9.43",
      availableBalance: "142.30",
      maxWithdrawAmount: "138.90",
    },
  ],
  positions: [
    {
      symbol: "SOLUSDT",
      initialMargin: "18.60",
      maintMargin: "4.40",
      unrealizedProfit: "2.23",
      positionInitialMargin: "15.70",
      openOrderInitialMargin: "0.00",
      leverage: "8",
      isolated: "false",
      entryPrice: "194.2900",
      maxNotional: "0",
      positionSide: "BOTH",
      positionAmt: "2.400",
      notional: "468.528",
      isolatedWallet: "0",
      updateTime: now - 5 * 60 * 1000,
      markPrice: "195.2200",
    },
    {
      symbol: "ETHUSDT",
      initialMargin: "30.00",
      maintMargin: "8.10",
      unrealizedProfit: "-1.95",
      positionInitialMargin: "26.50",
      openOrderInitialMargin: "0.00",
      leverage: "6",
      isolated: "false",
      entryPrice: "3940.6300",
      maxNotional: "0",
      positionSide: "BOTH",
      positionAmt: "0.0770",
      notional: "308.602",
      isolatedWallet: "0",
      updateTime: now - 12 * 60 * 1000,
      markPrice: "3915.3400",
    },
    {
      symbol: "BNBUSDT",
      initialMargin: "12.70",
      maintMargin: "3.20",
      unrealizedProfit: "6.91",
      positionInitialMargin: "9.40",
      openOrderInitialMargin: "0.00",
      leverage: "4",
      isolated: "false",
      entryPrice: "1096.6900",
      maxNotional: "0",
      positionSide: "BOTH",
      positionAmt: "0.4100",
      notional: "455.555",
      isolatedWallet: "0",
      updateTime: now - 7 * 60 * 1000,
      markPrice: "1113.5500",
    },
    {
      symbol: "BTCUSDT",
      initialMargin: "28.90",
      maintMargin: "6.60",
      unrealizedProfit: "4.34",
      positionInitialMargin: "22.30",
      openOrderInitialMargin: "0.00",
      leverage: "5",
      isolated: "false",
      entryPrice: "108000.1000",
      maxNotional: "0",
      positionSide: "BOTH",
      positionAmt: "0.0020",
      notional: "220.362",
      isolatedWallet: "0",
      updateTime: now - 9 * 60 * 1000,
      markPrice: "110181.1000",
    },
  ],
};

const mockTrades: Trade[] = [
  {
    symbol: "BTCUSDT",
    id: 101,
    orderId: 1001,
    orderListId: -1,
    price: "108000.1000",
    qty: "0.0020",
    realizedPnl: "0.00",
    quoteQty: "216.02",
    commission: "0.1080",
    commissionAsset: "USDT",
    time: now - 60 * 60 * 1000,
    buyer: true,
    maker: false,
    isBestMatch: true,
    side: "BUY",
  },
  {
    symbol: "SOLUSDT",
    id: 102,
    orderId: 1002,
    orderListId: -1,
    price: "194.2900",
    qty: "2.4000",
    realizedPnl: "0.00",
    quoteQty: "466.30",
    commission: "0.2391",
    commissionAsset: "USDT",
    time: now - 55 * 60 * 1000,
    buyer: true,
    maker: false,
    isBestMatch: true,
    side: "BUY",
  },
  {
    symbol: "BNBUSDT",
    id: 103,
    orderId: 1003,
    orderListId: -1,
    price: "1096.6900",
    qty: "0.4100",
    realizedPnl: "0.00",
    quoteQty: "449.64",
    commission: "0.2248",
    commissionAsset: "USDT",
    time: now - 48 * 60 * 1000,
    buyer: true,
    maker: false,
    isBestMatch: true,
    side: "BUY",
  },
  {
    symbol: "SOLUSDT",
    id: 104,
    orderId: 1004,
    orderListId: -1,
    price: "196.1500",
    qty: "2.0600",
    realizedPnl: "10.14",
    quoteQty: "404.07",
    commission: "0.2020",
    commissionAsset: "USDT",
    time: now - 42 * 60 * 1000,
    buyer: false,
    maker: false,
    isBestMatch: true,
    side: "SELL",
  },
  {
    symbol: "BNBUSDT",
    id: 105,
    orderId: 1005,
    orderListId: -1,
    price: "1114.1400",
    qty: "0.2500",
    realizedPnl: "6.87",
    quoteQty: "278.54",
    commission: "0.1393",
    commissionAsset: "USDT",
    time: now - 38 * 60 * 1000,
    buyer: false,
    maker: false,
    isBestMatch: true,
    side: "SELL",
  },
  {
    symbol: "BNBUSDT",
    id: 106,
    orderId: 1006,
    orderListId: -1,
    price: "1086.6500",
    qty: "0.1100",
    realizedPnl: "0.00",
    quoteQty: "119.53",
    commission: "0.0598",
    commissionAsset: "USDT",
    time: now - 34 * 60 * 1000,
    buyer: true,
    maker: false,
    isBestMatch: true,
    side: "BUY",
  },
  {
    symbol: "BNBUSDT",
    id: 107,
    orderId: 1007,
    orderListId: -1,
    price: "1086.6500",
    qty: "0.1400",
    realizedPnl: "0.00",
    quoteQty: "152.13",
    commission: "0.0761",
    commissionAsset: "USDT",
    time: now - 33 * 60 * 1000,
    buyer: true,
    maker: false,
    isBestMatch: true,
    side: "BUY",
  },
  {
    symbol: "SOLUSDT",
    id: 108,
    orderId: 1008,
    orderListId: -1,
    price: "191.2300",
    qty: "0.0100",
    realizedPnl: "0.00",
    quoteQty: "1.91",
    commission: "0.0010",
    commissionAsset: "USDT",
    time: now - 32 * 60 * 1000,
    buyer: true,
    maker: true,
    isBestMatch: true,
    side: "BUY",
  },
  {
    symbol: "SOLUSDT",
    id: 109,
    orderId: 1009,
    orderListId: -1,
    price: "191.2300",
    qty: "0.3000",
    realizedPnl: "0.00",
    quoteQty: "57.37",
    commission: "0.0287",
    commissionAsset: "USDT",
    time: now - 31 * 60 * 1000,
    buyer: true,
    maker: false,
    isBestMatch: true,
    side: "BUY",
  },
  {
    symbol: "SOLUSDT",
    id: 110,
    orderId: 1010,
    orderListId: -1,
    price: "191.2300",
    qty: "0.0300",
    realizedPnl: "0.00",
    quoteQty: "5.74",
    commission: "0.0029",
    commissionAsset: "USDT",
    time: now - 30 * 60 * 1000,
    buyer: true,
    maker: false,
    isBestMatch: true,
    side: "BUY",
  },
  {
    symbol: "SOLUSDT",
    id: 111,
    orderId: 1011,
    orderListId: -1,
    price: "191.2300",
    qty: "1.7200",
    realizedPnl: "0.00",
    quoteQty: "328.92",
    commission: "0.1645",
    commissionAsset: "USDT",
    time: now - 29 * 60 * 1000,
    buyer: true,
    maker: false,
    isBestMatch: true,
    side: "BUY",
  },
  {
    symbol: "ETHUSDT",
    id: 112,
    orderId: 1012,
    orderListId: -1,
    price: "3940.6300",
    qty: "0.0770",
    realizedPnl: "0.00",
    quoteQty: "303.43",
    commission: "0.1517",
    commissionAsset: "USDT",
    time: now - 28 * 60 * 1000,
    buyer: true,
    maker: false,
    isBestMatch: true,
    side: "BUY",
  },
  {
    symbol: "SOLUSDT",
    id: 113,
    orderId: 1013,
    orderListId: -1,
    price: "192.7700",
    qty: "0.6300",
    realizedPnl: "-3.86",
    quoteQty: "121.45",
    commission: "0.0607",
    commissionAsset: "USDT",
    time: now - 26 * 60 * 1000,
    buyer: false,
    maker: false,
    isBestMatch: true,
    side: "SELL",
  },
];

const mockIncome: IncomeRecord[] = [
  {
    symbol: "SOLUSDT",
    incomeType: "REALIZED_PNL",
    income: "10.14",
    asset: "USDT",
    time: now - 42 * 60 * 1000,
    info: "Order 1004",
    tranId: 9001,
    tradeId: "1004",
  },
  {
    symbol: "BNBUSDT",
    incomeType: "REALIZED_PNL",
    income: "6.87",
    asset: "USDT",
    time: now - 38 * 60 * 1000,
    info: "Order 1005",
    tranId: 9002,
    tradeId: "1005",
  },
  {
    symbol: "SOLUSDT",
    incomeType: "REALIZED_PNL",
    income: "-3.86",
    asset: "USDT",
    time: now - 26 * 60 * 1000,
    info: "Order 1013",
    tranId: 9003,
    tradeId: "1013",
  },
];

export function createMockService(): BinanceServiceContract {
  const initialEquity = env.BINANCE_INITIAL_EQUITY || 200;

  return {
    async getAccount(): Promise<FuturesAccount> {
      return mockAccount;
    },
    async getTrades(limit = 50): Promise<Trade[]> {
      return mockTrades.slice(0, limit);
    },
    async getIncome(
      limit = 100,
      incomeType = "REALIZED_PNL",
    ): Promise<IncomeRecord[]> {
      void incomeType;
      return mockIncome.slice(0, limit);
    },
    async createListenKey(): Promise<string> {
      return "mock-listen-key";
    },
    async keepAliveListenKey(listenKey: string): Promise<void> {
      void listenKey;
      return;
    },
    async getDashboardPayload(): Promise<DashboardPayload> {
      return {
        summary: buildSummary(
          mockAccount,
          mockTrades,
          mockIncome,
          initialEquity,
        ),
        positions: buildPositions(mockAccount),
        trades: buildTrades(mockTrades),
      };
    },
  };
}
